## Roblox thumbnails API wrapper
## Copyright (C) 2024 Trayambak Rai
## Copyright (C) 2025 the EquinoxHQ team
import std/[strutils, logging, options]
import pkg/[results, shakar, jsony]
import ./games, ../http

type
  ThumbnailState* {.pure.} = enum
    Error = "Error"
    Completed = "Completed"
    InReview = "InReview"
    Pending = "Pending"
    Blocked = "Blocked"
    TemporarilyUnavailable = "TemporarilyAvailable"

  ReturnPolicy* = enum
    Placeholder = "PlaceHolder"
    AutoGenerated = "AutoGenerated"
    ForceAutoGenerated = "ForceAutoGenerated"

  ThumbnailFormat* = enum
    Png = "png"
    Jpeg = "Jpeg"

  Thumbnail* = object
    targetId*: int64
    state*: ThumbnailState
    imageUrl*, version*: string

  ThumbnailRequest* = object
    requestId*: Option[string]
    targetId*: uint64
    `type`*: string
    size*: string
    format*: string
    isCircular*: bool

  ThumbnailResponse* = object
    requestId*: Option[string]
    errorCode*: int32
    errorMessage*: string
    targetId*: uint64
    state*: string
    imageUrl*: Option[string]
    version*: string

proc getGameIcon*(id: UniverseID): Thumbnail =
  let resp = httpGet(
    "https://thumbnails.roblox.com/v1/games/icons?universeIds=$1&returnPolicy=PlaceHolder&size=512x512&format=Png&isCircular=false" %
      [$id]
  )

  if !resp:
    warn "equinox: getGameIcon($1): HTTP request failed: $2" % [$id, resp.error()]
    return

  debug "getGameIcon($1): $2" % [$id, &resp]

  let payload = fromJson(&resp, StubData[Thumbnail]).data[0]

  payload

proc getThumbnailUrl*(request: ThumbnailRequest): ThumbnailResponse =
  let resp = httpPost("https://thumbnails.roblox.com/v1/batch", body = request)
  if !resp:
    warn "equinox: getThumbnailUrl(): HTTP request failed: " & resp.error()
    return

  (&resp).fromJson(ThumbnailResponse)
